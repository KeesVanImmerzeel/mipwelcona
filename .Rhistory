head(x)
.f <- function(x,z) {
print(x)
min(which(x<z))
}
apply(x,1,.f,z=strm_lns$Z)
.f <- function(x,z) {
print(z)
min(which(x<z))
}
apply(x,1,.f,z=strm_lns$Z)
?apply(array, margin, ...)
head(x)
nrow(x)
nrow(strm_lns)
x$z <- strm_lns$Z
x <- raster::extract(conc_l_lev,c(strm_lns$X,strm_lns$Y))
str(x)
x <- raster::extract(conc_l_lev,c(strm_lns$X,strm_lns$Y)) %>% as.matrix()
str(x)
x <- raster::extract(conc_l_lev,c(strm_lns$X,strm_lns$Y))
str(x)
?raster::extract()
head(x)
test <- as.data.frame(x)
x <- raster::extract(conc_l_lev,c(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
nrow(x)
nrow(strm_lns)
c(strm_lns$X,strm_lns$Y)
?raster::extract()
nrow(cbind(strm_lns$X,strm_lns$Y))
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
str(x)
head(x)
x$z <- strm_lns$Z
str(x)
head(x)
.f <- function(x) {
n <- length(x-1)
min(which(x[1:(n-1)]<x[n]))
}
.f <- function(x) {
n <- length(x-1)
min(which(x[1:(n-1)]<x[n]))
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$z <- strm_lns$Z
x %<>% as.matrix()
head(x)
test <- apply(x,1,.f)
warnings()
head(test)
tail(test)
range(test,na.rm=TRUE)
.f <- function(x) {
n <- length(x)
i <- which(x[1:(n-1)]<x[n])
if (length(i)>0) {
return(min(i))
} else {
return(n-1)
}
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$z <- strm_lns$Z
x %<>% as.matrix()
test <- apply(x,1,.f)
head(test)
range(test)
unique(test)
sort(unique(test))
str(conc_l_lev)
.f <- function(x) {
n <- length(x)
i <- which(x[1:(n-1)]<x[n])
if (length(i)>0) {
return(min(i))
} else {
return(n)
}
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$z <- strm_lns$Z
x %<>% as.matrix()
test <- apply(x,1,.f)
sort(unique(test))
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
conc_l_lev <- mw_example_conc_layer_levels()
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
.f <- function(x) {
n <- length(x)
i <- which(x[1:(n-1)]<x[n])
if (length(i)>0) {
return(min(i))
} else {
return(n)
}
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.f)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
head(x)
range(unique(x))
sort(unique(x))
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_level and z-level (1 record)
.f <- function(x) {
n <- length(x)
i <- which(x[1:(n-1)]<x[n])
if (length(i)>0) {
return(min(i))
} else {
return(n)
}
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.f)
}
nrow(strm_lns)
nrow(test)
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
nrow(x)
length(x)
document()
library(devtools)
document()
document()
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
conc_l_lev <- mw_example_conc_layer_levels()
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
length(i)
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
library(devtools)
load_all()
strm_lns <- mw_read_streamlines(fname)
conc_l_lev <- mw_example_conc_layer_levels()
conc_l <- mw_example_concentrations()
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
i
head(strm_lns)
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
head(x)
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
nrow(x)
nrow(i)
length(i)
x$i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
head(i)
head(x)
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y))
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
x[,i]
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y))
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
conc <- x[,i] %>% unname()
conc
head(conc)
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y))
i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
head(x)
.f <- function(x) {
return(x[i])
}
.f <- function(x) {
return(x[i])
}
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
test <- apply(x,1,.f)
head(test)
str(test)
head(x)
i
.f <- function(x) {
n <- length(x)
return(x[x[n]])
}
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
test <- apply(x,1,.f)
test
head(i)
i
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
head(x)
i
head(x)
x[,i]
test <- x[,i]
names(test)
names(test) <- NULL
head(test)
test %>% as.numeric()
str(test)
mw_conservative_conc <- function(strm_lns, conc_l_lev, conc_l) {
#x: (concentrations, i); i=concentration layer number
.f <- function(x) {
n <- length(x)
return(x[x[n]])
}
x <- raster::extract(conc_l,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$i <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
apply(x,1,.f)
}
x <- mw_conservative_conc(strm_lns, conc_l_lev, conc_l)
x
length(x)
document()
library(devtools)
document()
library(mipwelcona)
document()
document()
library(devtools)
document()
document()
library(devtools)
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
fname <- system.file("extdata","well_filters.ipf",package="mipwelcona")
well_fltrs <- mw_read_well_filters(fname)
conc_l <- mw_example_concentrations()
conc_l <- mw_example_concentrations()
load_all()
document()
head(strm_lns)
documet()
document()
conc_conserv <- mw_conservative_conc(strm_lns, conc_l_lev, conc_l)
head(strm_lns)
str(conc_l_lev)
conc_l_lev <- mw_example_conc_layer_levels()
str(conc_l)
str(well_fltrs)
conc_conserv <- mw_conservative_conc(strm_lns, conc_l_lev, conc_l)
cons_conserv
mw_conservative_conc(strm_lns, conc_l_lev, conc_l)
conc_conserv <- mw_conservative_conc(strm_lns, conc_l_lev, conc_l)
conc_conserv
document()
library(devtools)
load_all()
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
conc_l_lev <- mw_example_conc_layer_levels()
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
str(x)
head(x)
x$Z <- strm_lns$Z
rec <- x[1,]
rec
?stats
n <- length(rec)
x <- rec[1:(n-1)]
y <- 1:(n-1)
xout <- rec[n]
stats::approx(x,y,xout,method="constant",rule=c(2:2))
stats::approx(x,y,xout,method="constant",rule=c(2:2))$y
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
.g
.g(rec)
rec
rec$Z <- 1
.g(rec)
rec$Z <- -100
.g(rec)
# @export
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.f)
}
#' @inheritParams mw_create_sl_fltr_table
#' @param conc_l_lev Levels of concentration layers (RasterBrick).
#' @return Numbers of the concentration layer corresponding to all locations (x,y,z) of
#'   streamline trajects (integer vector).
# @examples
#' fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
#' strm_lns <- mw_read_streamlines(fname)
#' conc_l_lev <- mw_example_conc_layer_levels()
#' x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
# @export
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.f)
}
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.f)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %<>% as.matrix()
apply(x,1,.g)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
range(x)
unique(x)
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec){
n <- length(rec)
stats::approx(x=rec[1:(n-1)],y=1:(n-1),xout=rec[n],method="constant",rule=c(2:2))$y
}
x <- raster::extract(conc_l_lev,cbind(strm_lns$X,strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %>% as.matrix() %>% apply(1,.g)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
unique(x)
?approx
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec) {
n <- length(rec)-1
stats::approx(
x = rec[1:n],
y = 1:n,
xout = rec[n+1],
method = "constant",
rule = c(2:2)
)$y
}
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec) {
n <- length(rec)-1
stats::approx(
x = rec[1:n],
y = 1:n,
xout = rec[n+1],
method = "constant",
rule = c(2:2)
)$y
}
x <-
raster::extract(conc_l_lev, cbind(strm_lns$X, strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %>% as.matrix() %>% apply(1, .g)
}
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
#x conc_l_levels and z-level (1 record)
#.f <- function(x) {
#  n <- length(x)
#  i <- which(x[1:(n-1)]<x[n])
#  if (length(i)>0) {
#    return(min(i))
#  } else {
#    return(n)
#  }
#}
.g <- function(rec) {
n <- length(rec)-1
stats::approx(
x = rec[1:n],
y = 1:n,
xout = rec[n+1],
method = "constant",
rule = c(2:2)
)$y
}
x <-
raster::extract(conc_l_lev, cbind(strm_lns$X, strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %>% as.matrix() %>% apply(1, .g)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
unique(x)
x <-
raster::extract(conc_l_lev, cbind(strm_lns$X, strm_lns$Y))
head(x)
?apply
ncol(x)
?approx
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
.g <- function(x) {
n <- length(x)-1
stats::approx(
x[1:n],
y=1:n,
xout = x[n+1],
method = "constant",
rule = c(2:2)
)$y
}
x <-
raster::extract(conc_l_lev, cbind(strm_lns$X, strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %>% as.matrix() %>% apply(1, .g)
}
x <- .mw_get_conc_layer_nr(strm_lns, conc_l_lev)
unique(x)
head(x)
use_package("stats")
.mw_get_conc_layer_nr <- function(strm_lns, conc_l_lev) {
.f <- function(x) {
n <- length(x) - 1
stats::approx(
x[1:n],
y = 1:n,
xout = x[n + 1],
method = "constant",
rule = c(2:2)
)$y
}
x <-
raster::extract(conc_l_lev, cbind(strm_lns$X, strm_lns$Y)) %>% as.data.frame()
x$Z <- strm_lns$Z
x %>% as.matrix() %>% apply(1, .f)
}
