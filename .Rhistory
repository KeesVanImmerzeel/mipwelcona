data.table::rbindlist()
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR")
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME)
conc <-
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop")
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop")
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr)
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::relocate(WL_NR)
load_all()
rm(list = c("chk_mw_conc_fltr"))
load_all()
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters, sl_fltr_table=chk_sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines )
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table=sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
chk_mw_conc_well
.mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
sl_fltr_table=chk_sl_fltr_table
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr) %>% dplyr::select(c(FLTR_NR, WL_NR, Q_FLTR))
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
)
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
) %>%
data.table::rbindlist()
na.omit.list <- function(y) { return(y[!sapply(y, function(x) all(is.na(x)))]) }
conc <-
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
)
conc
na.omit.list(conc)
conc %<>% na.omit.list(conc) %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::relocate(WL_NR)
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::relocate(WL_NR)
conc %<>% na.omit.list() %>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::relocate(WL_NR)
conc
load_all()
rm(list = c("na.omit.list"))
load_all()
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
chk_mw_conc_well
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
.mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
chk_mw_conc_well
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
usethis::use_data(chk_mw_read_streamlines,
chk_mw_read_well_filters,
chk_sl_fltr_table,
chk_mw_init,
chk_mw_conc_streamlines,
chk_mw_conc_fltr,
chk_mw_conc_well,
overwrite = TRUE,
internal = TRUE)
document()
rm(list = c("chk_mw_conc_well"))
document()
use_package("data.table")
conc
well_fltrs
sl_fltr_table
well_fltrs=chk_mw_read_well_filters
conc_streamlines=chk_mw_conc_streamlines
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr) %>% dplyr::select(c(FLTR_NR, WL_NR, Q_FLTR))
well_fltrs
conc <-
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
)
conc
length(conc)
conc
conc[[1]]
conc[[1]]
conc[[1]] <- NA
conc[[1]]
conc[[2]] <- na
conc[[2]] <- NA
conc %<>% na.omit.list() # Remove results when no concentrations are available
length(conc)
length(conc)==0
fname <- system.file("extdata","streamlines.iff",package="mipwelcona")
strm_lns <- mw_read_streamlines(fname)
strm_lns
x <- mw_init(strm_lns, conc_l_lev=mw_example_conc_layer_levels(),
conc_l=mw_example_concentrations())
x
library(devtools)
document()
library(devtools)
load_all()
.mw_conc_fltr( fltr_nr=1, sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
.mw_conc_fltr( fltr_nr=c(1,2), sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
fltr_nr <- c(1,2)
.mw_conc_fltr( fltr_nr, sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines
sl_fltr_table=chk_sl_fltr_table; conc_streamlines=chk_mw_conc_streamlines
sl_fltr_table %>% dplyr::filter(FLTR_NR == fltr_nr)
sl_fltr_table %>% dplyr::filter(FLTR_NR == fltr_nr) %>% dplyr::select(-c(FLTR_NR)) %>% dplyr::pull(1)
sl_nrs <-
sl_fltr_table %>% dplyr::filter(FLTR_NR == fltr_nr) %>% dplyr::select(-c(FLTR_NR)) %>% dplyr::pull(1)
conc_streamlines %<>% dplyr::filter(SL_NR %in% sl_nrs)
df <-
conc_streamlines %>% dplyr::group_by(TIME) %>% dplyr::summarize(CONC =
mean(CONC), .groups = "drop")
df
cbind(FLTR_NR = fltr_nr, df)
fltr_nr
?apply()
apply(fltr_nr,1,.mw_conc_fltr,sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
apply(fltr_nr %>% as.array(),1,.mw_conc_fltr,sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
apply(fltr_nr %>% as.array(),1,.mw_conc_fltr,sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
chk_mw_conc_streamlines
tail(chk_mw_conc_streamlines)
chk_sl_fltr_table
well_nr <- c(1,18)
apply(fltr_nr %>% as.array(),1,.mw_conc_fltr,sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
apply(well_nr %>% as.array(),1,.mw_conc_well,well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines)
well_nr
sl_fltr_table
well_nr
apply(well_nr %>% as.array(),1,.mw_conc_well,well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines)
.mw_conc_well( well_nr=18, well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines )
well_nr <- 18
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr) %>% dplyr::select(c(FLTR_NR, WL_NR, Q_FLTR))
well_fltrs
well_fltrs=chk_mw_read_well_filters
well_fltrs
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr) %>% dplyr::select(c(FLTR_NR, WL_NR, Q_FLTR))
well_fltrs
well_fltrs=chk_mw_read_well_filters
well_fltrs
well_nr
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr)
well_fltrs
well_nr <- c(1,9)
apply(well_nr %>% as.array(),1,.mw_conc_well,well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines)
chk_mw_read_well_filters
well_nr <- 1
well_fltrs
well_fltrs=chk_mw_read_well_filters
well_fltrs %<>%  dplyr::filter(WL_NR == well_nr) %>% dplyr::select(c(FLTR_NR, WL_NR, Q_FLTR))
well_fltrs
sum(well_fltrs$Q_FLTR)
well_fltrs
conc <-
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
)
conc
conc %<>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::relocate(WL_NR)
conc
conc %<>% dplyr::mutate(Q_WL=sum(Q_FLTR))
conc %<>% dplyr::mutate(Q_WL=sum(well_fltrs$Q_FLTR))
conc
?dplyr::relocate
conc <-
apply(
well_fltrs$FLTR_NR %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines
)
conc %<>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(WL_NR = well_nr) %>%
dplyr::mutate(Q_WL=sum(well_fltrs$Q_FLTR)) %>%
dplyr::relocate(Q_WL) %>%
dplyr::relocate(WL_NR)
conc
document()
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
chk_mw_conc_well
usethis::use_data(chk_mw_read_streamlines,
chk_mw_read_well_filters,
chk_sl_fltr_table,
chk_mw_init,
chk_mw_conc_streamlines,
chk_mw_conc_fltr,
chk_mw_conc_well,
overwrite = TRUE,
internal = TRUE)
document()
rm(list = c("chk_mw_conc_well"))
document()
chk_mw_read_well_filters
apply(well_nr %>% as.array(),1,.mw_conc_well,well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines)
well_nr
well_nr <- c(1,9)
apply(well_nr %>% as.array(),1,.mw_conc_well,well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines)
library(devtools)
load_all()
?.mw_conc_well()
?.mw_create_sl_fltr_table()
?mw_init()
?.mw_conc_fltr()
document()
document()
chk_sl_fltr_table <- mw_create_sl_fltr_table(chk_mw_read_streamlines, chk_mw_read_well_filters)
head()
head(chk_sl_fltr_table)
document()
load_all()
rm(list = c("chk_sl_fltr_table"))
document()
fname <-
system.file("extdata", "streamlines.iff", package = "mipwelcona")
chk_mw_read_streamlines <- mw_read_streamlines(fname)
fname <-
system.file("extdata", "well_filters.ipf", package = "mipwelcona")
chk_mw_read_well_filters <- mw_read_well_filters(fname)
head(chk_mw_read_streamlines)
head(chk_mw_read_well_filters)
chk_sl_fltr_table <- mw_create_sl_fltr_table(chk_mw_read_streamlines, chk_mw_read_well_filters)
head(chk_sl_fltr_table)
conc_l_lev <- mw_example_conc_layer_levels()
# Read example initial concentrations of different layers in the subsoil (9 raster layers).
conc_l <- mw_example_concentrations()
#Initialize base streamline concentration table.
chk_mw_init <- mw_init(chk_mw_read_streamlines, conc_l_lev, conc_l)
head(chk_mw_init)
chk_mw_conc_streamlines <-
.mw_conc_streamlines(
conc_strm_lns=chk_mw_init,
times = c(0, 1 * 365, 5 * 365, 10 * 365, 25 * 365),
processes = c("dispersion","decay", "retardation"),
alpha = 0.3,
rho = 3,
labda = 0.0001
)
head(chk_mw_conc_streamlines)
chk_mw_conc_fltr <- .mw_conc_fltr(
fltr_nr = 1,
sl_fltr_table = chk_sl_fltr_table,
conc_streamlines = chk_mw_conc_streamlines
)
head(chk_mw_conc_fltr)
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
chk_mw_conc_well <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters,
sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines )
head(chk_mw_conc_well)
usethis::use_data(chk_mw_read_streamlines,
chk_mw_read_well_filters,
chk_sl_fltr_table,
chk_mw_init,
chk_mw_conc_streamlines,
chk_mw_conc_fltr,
chk_mw_conc_well,
overwrite = TRUE,
internal = TRUE)
library(devtools)
load_all()
document()
load_all()
library(devtools)
load_all()
document()
fname <-
system.file("extdata", "streamlines.iff", package = "mipwelcona")
chk_mw_read_streamlines <- mw_read_streamlines(fname)
fname <-
system.file("extdata", "well_filters.ipf", package = "mipwelcona")
chk_mw_read_well_filters <- mw_read_well_filters(fname)
chk_sl_fltr_table <- mw_create_sl_fltr_table(chk_mw_read_streamlines, chk_mw_read_well_filters)
# Read example concentration layer levels (8 rasters layers).
conc_l_lev <- mw_example_conc_layer_levels()
# Read example initial concentrations of different layers in the subsoil (9 raster layers).
conc_l <- mw_example_concentrations()
#Initialize base streamline concentration table.
chk_mw_conc_init <- mw_conc_init(chk_mw_read_streamlines, conc_l_lev, conc_l)
head(chk_mw_conc_init)
usethis::use_data(chk_mw_read_streamlines,
chk_mw_read_well_filters,
chk_sl_fltr_table,
chk_mw_conc_init,
chk_mw_conc_streamlines,
chk_mw_conc_fltr,
chk_mw_conc_well,
overwrite = TRUE,
internal = TRUE)
library(devtools)
load_all()
load_all()
library(devtools)
load_all()
sl_fltr_table <- chk_sl_fltr_table
sl_fltr_table[98,]$FLTR_NR <- 2
sl_fltr_table[99,]$FLTR_NR <- 2
sl_fltr_table[100,]$FLTR_NR <- 2
x <- .mw_conc_well( well_nr=1, well_fltrs=chk_mw_read_well_filters, sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines )
x
fname <- system.file("extdata","well_filters.ipf",package="mipwelcona")
well_fltrs <- mw_read_well_filters(fname)
head(well_fltrs)
sl_fltr_table
.mw_conc_fltr( fltr_nr=1, sl_fltr_table=chk_sl_fltr_table, conc_streamlines=chk_mw_conc_streamlines)
fltr_nrs <- c(1,2)
fltr_nrs
apply(fltr_nrs, 1, .mw_conc_fltr, sl_fltr_table, conc_streamlines)
?apply
apply(fltr_nrs %>% as.array(), 1, .mw_conc_fltr, sl_fltr_table, conc_streamlines)
sl_fltr_table
conc_streamlines <- chk_mw_conc_streamlines
apply(fltr_nrs %>% as.array(), 1, .mw_conc_fltr, sl_fltr_table, conc_streamlines)
sl_fltr_table
x <- apply(fltr_nrs %>% as.array(), 1, .mw_conc_fltr, sl_fltr_table, conc_streamlines)
str(x)
well_fltrs
head(well_fltrs)
well_fltrs %<>%  dplyr::filter(FLTR_NR %in% fltr_nrs)
well_fltrs
well_fltrs %<>%  dplyr::filter(FLTR_NR %in% fltr_nrs) %>% dplyr::select(c(FLTR_NR, Q_FLTR))
well_fltrs
x
na.omit.list <- function(y) { return(y[!sapply(y, function(x) all(is.na(x)))]) }
conc <- apply(fltr_nrs %>% as.array(), 1, .mw_conc_fltr, sl_fltr_table, conc_streamlines)
conc
data.table::rbindlist(conc)
conc %<>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(Q=sum(well_fltrs$Q_FLTR)) %>%
dplyr::relocate(Q)
conc
.mw_conc_filters <-
function(fltr_nrs,
well_fltrs,
sl_fltr_table,
conc_streamlines) {
well_fltrs %<>%  dplyr::filter(FLTR_NR %in% fltr_nrs) %>% dplyr::select(c(FLTR_NR, Q_FLTR))
if (nrow(well_fltrs) < 1) {
return(NA)
}
conc <-
apply(fltr_nrs %>% as.array(),
1,
.mw_conc_fltr,
sl_fltr_table,
conc_streamlines)
conc %<>% na.omit.list() # Remove results when no concentrations are available
if (length(conc) == 0) {
return(NA)
}
conc %<>%
data.table::rbindlist() %>%
dplyr::left_join(well_fltrs, by = "FLTR_NR") %>%
dplyr::group_by(TIME) %>%
dplyr::summarise(CONC = weighted.mean(CONC, Q_FLTR), .groups =
"drop") %>%
dplyr::mutate(Q = sum(well_fltrs$Q_FLTR)) %>%
dplyr::relocate(Q)
return(conc)
}
.mw_conc_filters( fltr_nrs=c(1,2), well_fltrs=chk_mw_read_well_filters, sl_fltr_table=chk_sl_fltr_table,
conc_streamlines=chk_mw_conc_streamlines )
document()
rm(list = c(".mw_conc_filters", "na.omit.list"))
document()
library(devtools)
